<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wA=
</value>
  </data>
</root>